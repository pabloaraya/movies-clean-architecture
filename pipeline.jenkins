pipeline {
 agent {
    label 'master'
 }
 options {
    timestamps()
    timeout(time: 30, unit: 'MINUTES')
    buildDiscarder(logRotator(numToKeepStr: '30'))
    disableConcurrentBuilds()
  }
  tools {
    gradle 'android-gradle'
  }
 stages {
     stage('Build') {
        steps {
          sh 'gradle clean assemble'
        }
     }
     stage('Checkstyle Checks') {
        steps {
          sh 'gradle app:checkstyle'
          checkstyle canComputeNew: false, defaultEncoding: '', healthy: '', pattern: '**/reports/checkstyle/checkstyle.xml', unHealthy: ''
        }
     }
     stage('Lint Checks') {
        steps {
          sh 'gradle app:lintDebug'
          androidLint canComputeNew: false, defaultEncoding: '', healthy: '', pattern: '**/build/reports/lint-results*.xml', unHealthy: ''
        }
     }
     stage('Unit Tests') {
        steps {
	        sh 'gradle testDebugUnitTest'
        }
        post {
          always {
            junit '**/build/test-results/**/*.xml'
          }
        }
     }
     stage('Jacoco Report') {
        steps {
          sh 'gradle app:jacocoTestReport'
          publishHTML target: [
                 allowMissing: false,
                 alwaysLinkToLastBuild: false,
                 keepAll: true,
                 reportDir: 'app/build/reports/jacoco/jacocoTestReport/html',
                 reportFiles: 'index.html',
                 reportName: 'JacocoCov Report'
                 ]
        }
     }
 }
}
